        public async Task<IActionResult> RegisterFromCsv(IFormFile file)
        {
            if (file == null || file.Length == 0 || !file.FileName.EndsWith(".csv"))
            {
                ViewBag.Message = "Please upload a valid CSV file.";
                return View();
            }

            var errors = new List<string>();
            var successCount = 0;

            using (var reader = new StreamReader(file.OpenReadStream()))
            {
                var header = reader.ReadLine(); // Skip the header row
                while (!reader.EndOfStream)
                {
                    var line = reader.ReadLine();
                    var fields = line.Split(',');

                    if (fields.Length < 8) // Ensure all required fields are present
                    {
                        errors.Add("Invalid row format. Expected: FirstName, LastName, Email, Password, RoleName.");
                        continue;
                    }

                    var firstName = fields[0].Trim();
                    var lastName = fields[1].Trim();
                    var pin = fields[2].Trim();
                    var email = fields[3].Trim();
                    var phone = fields[4].Trim();
                    var department = fields[5].Trim();
                    var designation = fields[6].Trim();
                    if (!bool.TryParse(fields[7].Trim(), out bool status))
                    {
                        errors.Add($"Invalid status value '{fields[7].Trim()}' for {email}. Must be 'true', 'false', '1', or '0'.");
                        continue; // Skip this row and move to the next
                    }
                    var roleName = fields.Length > 8 ? fields[8].Trim() : "User";

                    var user = new ApplicationUser
                    {
                        FirstName = firstName,
                        LastName = lastName,
                        UserName = email,
                        Email = email,
                        PhoneNumber = phone,
                        Department = department,
                        Designation = designation,
                        Status = status,
                        Pin = pin
                    };

                    var result = await _userManager.CreateAsync(user);
                    if (result.Succeeded)
                    {
                        await _userManager.AddToRoleAsync(user, roleName);
                        successCount++;
                    }
                    else
                    {
                        foreach (var error in result.Errors)
                        {
                            errors.Add($"Error for {email}: {error.Description}");
                        }
                    }
                }
            }

            ViewBag.Message = $"{successCount} users registered successfully.";
            if (errors.Any())
            {
                ViewBag.Errors = errors;
            }

            return View();
        }
